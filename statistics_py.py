# -*- coding: utf-8 -*-
"""Statistics.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FlEdQbn6hshuLWDzxo6wLRHgEQwiswL3
"""

import numpy as np
import scipy.stats as stats

# Data: Durability of each print-head (in millions of characters)
data = np.array([1.13, 1.55, 1.43, 0.92, 1.25, 1.36, 1.32, 0.85, 1.07, 1.48, 1.20, 1.33, 1.18, 1.22, 1.29])
data

# Samle size
n = len(data)
n

# Sample mean
sample_mean = np.mean(data)
sample_mean

from random import sample
# Sample Standard Deviation
sample_std = np.std(data, ddof=1)
sample_std

# 99% Confidence Interval using sample standard deviation
# Degree of freedom
df = n - 1
df

# t-value for 99% confidence interval
t_value = stats.t.ppf(0.995, df)
t_value

# Margin of error
margin_of_error = t_value * (sample_std / np.sqrt(n))
margin_of_error

# Confidence interval
ci_sample = (sample_mean - margin_of_error, sample_mean + margin_of_error)
ci_sample

print("99% Confidence Interval using sample standard deviation:", ci_sample)

# b. 99% Confidence Interval using known population standard deviation
# Known population standard deviation
population_std = 0.2

# z-value for 99% confidence interval
z_value = stats.norm.ppf(0.995)
z_value

# Margin of error
margin_of_error_population = z_value * (population_std / np.sqrt(n))
margin_of_error_population

# Confidence interval
ci_population = (sample_mean - margin_of_error_population, sample_mean + margin_of_error_population)
ci_population

print("99% Confidence Interval using known population standard deviation:", ci_population)

